name: Ingest YouTube Playlist Data to Port using API

on:
  workflow_dispatch:

jobs:
  fetch-and-ingest:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Authenticate with GitHub
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: echo "Authenticated with GitHub using the Personal Access Token."

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Fetch YouTube Playlist Data
        env:
          YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
          PLAYLIST_ID: ${{ secrets.PLAYLIST_ID }}
        run: |
          # Fetch playlist items (videos) from the YouTube API and save to data.json
          curl -X GET "https://www.googleapis.com/youtube/v3/videos?id=${PLAYLIST_ID}&part=snippet,contentDetails,statistics&key=${YOUTUBE_API_KEY}&maxResults=50" > data.json

      - name: Retrieve Port Access Token
        env:
          CLIENT_ID: ${{ secrets.PORT_CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.PORT_CLIENT_SECRET }}
        run: |
          # Retrieve an access token from Port
          access_token=$(curl --location --request POST 'https://api.getport.io/v1/auth/access_token' \
            --header 'Content-Type: application/json' \
            --data-raw '{
              "clientId": "'"$CLIENT_ID"'",
              "clientSecret": "'"$CLIENT_SECRET"'"
            }' | jq '.accessToken' | sed 's/"//g')
          echo "access_token=$access_token" >> $GITHUB_ENV

      - name: Process YouTube Data and Ingest to Port
        env:
          ACCESS_TOKEN: ${{ env.access_token }}
          BLUEPRINT_ID: ${{ secrets.PORT.BLUEPRINT_ID }}
        run: |
          # Parse data.json and extract required fields for each video
          cat data.json | jq -c '.items[] | {
            identifier: .id,
            title: .snippet.title,
            properties: {
              id: .id,
              title: .snippet.title,
              description: .snippet.description,
              channel_id: .snippet.channelId,
              channel_title: .snippet.channelTitle,
              published_at: .snippet.publishedAt,
              view_count: .statistics.viewCount,
              like_count: .statistics.likeCount,
              comment_count: .statistics.commentCount,
              duration: .contentDetails.duration
            }
          }' > processed_data.json

          # Loop through each video entry in processed_data.json and ingest to Port
          while IFS= read -r video; do
            curl --location --request POST "https://api.getport.io/v1/blueprints/${BLUEPRINT_ID}/entities?upsert=true" \
              --header "Authorization: Bearer $ACCESS_TOKEN" \
              --header "Content-Type: application/json" \
              --data-raw "$video"
          done < processed_data.json
