# 
name: Fetch YouTube Playlist and Upload to Port

on:
  push:
    branches:
      - feature

jobs:
  fetch_and_upload:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Fetch YouTube Playlist Data
        id: fetch_playlist
        env:
          YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
        run: |
          playlistId="PL-7fHWfrqQvEUgrFz5pE-NWd6-8ixbX8w&si=oRUG8CYA_ZgBL65p"
          response=$(curl -s "https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&maxResults=50&playlistId=${playlistId}&key=${YOUTUBE_API_KEY}")
          echo "$response" > playlist_data.json
          echo "::set-output name=playlist_data::$response"

      - name: Parse Playlist Data
        id: parse_data
        run: |
          cat playlist_data.json | jq -r '.items[] | {id: .id, title: .snippet.title, description: .snippet.description, channel_id: .snippet.channelId, channel_title: .snippet.channelTitle, published_at: .snippet.publishedAt}' > formatted_playlist.json
          echo "Formatted playlist data saved."

      - name: Upload Playlist Data to Port
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: UPSERT
          identifier: playlist_identifier  # A unique identifier for the playlist in Port
          title: YouTube Playlist Import
          blueprint: playlist
          properties: |-
            {
              "id": "string",
              "title": "string",
              "description": "string",
              "channel_id": "string",
              "channel_title": "string",
              "published_at": "2024-11-09T17:05:06.020Z"
            }


       
 
