name: Fetch YouTube Playlist and Videos, Upload to Port

on:
  push:
    branches:
      - main  # Trigger the workflow on commits to the main branch

jobs:
  fetch_and_upload:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Fetch YouTube Playlist Metadata
        id: fetch_playlist
        env:
          YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
        run: |
          playlistId="PL-7fHWfrqQvEUgrFz5pE-NWd6-8ixbX8w"  # Ensure only playlist ID
          response=$(curl -s "https://www.googleapis.com/youtube/v3/playlists?part=snippet&id=${playlistId}&key=${YOUTUBE_API_KEY}")
          echo "$response" > playlist_metadata.json
          echo "::set-output name=playlist_metadata::$response"

      - name: Fetch Videos in Playlist
        id: fetch_videos
        env:
          YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
        run: |
          playlistId="PL-7fHWfrqQvEUgrFz5pE-NWd6-8ixbX8w"
          response=$(curl -s "https://www.googleapis.com/youtube/v3/playlistItems?part=snippet,contentDetails&maxResults=50&playlistId=${playlistId}&key=${YOUTUBE_API_KEY}")
          echo "$response" > videos_data.json
          echo "::set-output name=videos_data::$response"

      - name: Parse Playlist and Video Data
        id: parse_data
        run: |
          # Parse playlist metadata
          playlist_data=$(cat playlist_metadata.json | jq -c '.items[0] | {
            id: .id,
            title: .snippet.title,
            description: .snippet.description,
            channel_id: .snippet.channelId,
            channel_title: .snippet.channelTitle,
            published_at: .snippet.publishedAt
          }')
          echo "::set-output name=formatted_playlist::$playlist_data"

          # Parse videos in the playlist
          videos_data=$(cat videos_data.json | jq -c '.items[] | {
            id: .contentDetails.videoId,
            title: .snippet.title,
            description: .snippet.description,
            playlist_id: "PL-7fHWfrqQvEUgrFz5pE-NWd6-8ixbX8w",
            channel_id: .snippet.channelId,
            published_at: .snippet.publishedAt
          }')
          echo "::set-output name=formatted_videos::$videos_data"
          echo "Formatted playlist and video data saved."

      - name: Set Playlist Properties
        id: set_playlist_properties
        run: |
          playlist_data=${{ steps.parse_data.outputs.formatted_playlist }}
          echo "PROPERTIES_PLAYLIST=$playlist_data" >> $GITHUB_ENV

      - name: Set Videos Properties
        id: set_videos_properties
        run: |
          videos_data=${{ steps.parse_data.outputs.formatted_videos }}
          echo "PROPERTIES_VIDEOS=$videos_data" >> $GITHUB_ENV

      - name: Upload Playlist Metadata to Port
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: UPSERT
          identifier: ${{ fromJSON(steps.parse_data.outputs.formatted_playlist).id }}
          title: YouTube Playlist Metadata
          blueprint: playlist
          properties: ${{ env.PROPERTIES_PLAYLIST }}

      - name: Upload Videos Metadata to Port
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: UPSERT
          identifier: ${{ fromJSON(steps.parse_data.outputs.formatted_videos).id }}
          title: YouTube Video Metadata
          blueprint: video
          properties: ${{ env.PROPERTIES_VIDEOS }}
