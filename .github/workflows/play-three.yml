name: YouTube Playlist to Port Ingestion

on:
  workflow_dispatch:
    inputs:
      port_context:
        required: true
        description: Includes the blueprint identifier, and the action's run id
      playlist_id:
        required: true
        description: The playlist id
        type: string

jobs:
  ingest-playlist:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Fetch and Ingest YouTube Playlist to Port
        id: fetch_videos
        env:
          YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
        run: |
          PLAYLIST_ID=${{ inputs.playlist_id }}


          nextPageToken=""
          while true; do
              response=$(curl -s "https://www.googleapis.com/youtube/v3/playlistItems?part=snippet,contentDetails&playlistId=$PLAYLIST_ID&maxResults=50&pageToken=$nextPageToken&key=$YOUTUBE_API_KEY")
              
              echo "$response" | jq -c '.items[]' | while read -r item; do
                  video_id=$(echo "$item" | jq -r '.contentDetails.videoId')
                  title=$(echo "$item" | jq -r '.snippet.title')
                  description=$(echo "$item" | jq -r '.snippet.description')
                  published_at=$(echo "$item" | jq -r '.contentDetails.videoPublishedAt')
                  channel_id=$(echo "$item" | jq -r '.snippet.channelId')
                  channel_title=$(echo "$item" | jq -r '.snippet.channelTitle')

                  video_details=$(curl -s "https://www.googleapis.com/youtube/v3/videos?part=statistics,contentDetails&id=$video_id&key=$YOUTUBE_API_KEY")
                  duration=$(echo "$video_details" | jq -r '.items[0].contentDetails.duration')
                  view_count=$(echo "$video_details" | jq -r '.items[0].statistics.viewCount | tonumber')
                  like_count=$(echo "$video_details" | jq -r '.items[0].statistics.likeCount | tonumber')
                  comment_count=$(echo "$video_details" | jq -r '.items[0].statistics.commentCount | tonumber')

                  data=$(jq -n --arg identifier "$video_id" \
                                     --arg title "$title" \
                                     --arg description "$description" \
                                     --arg published_at "$published_at" \
                                     --arg channel_id "$channel_id" \
                                     --arg channel_title "$channel_title" \
                                     --arg duration "$duration" \
                                     --arg view_count "$view_count" \
                                     --arg like_count "$like_count" \
                                     --arg comment_count "$comment_count" \
                                     '{
                                         identifier: $identifier,
                                         title: $title,
                                         properties: {
                                             id: $identifier,
                                             description: $description,
                                             title: $title,
                                             published_at: $published_at,
                                             channel_id: $channel_id,
                                             channel_title: $channel_title,
                                             duration: $duration,
                                             view_count: $view_count,
                                             like_count: $like_count,
                                             comment_count: $comment_count
                                         },
                                         relations: {}
                                     }')

                   video=$(jq -n --arg identifier "$video_id" \
                                     --arg title "$title" \
                                     --arg description "$description" \
                                     --arg published_at "$published_at" \
                                     --arg channel_id "$channel_id" \
                                     --arg channel_title "$channel_title" \
                                     --arg duration "$duration" \
                                     --arg view_count "$view_count" \
                                     --arg like_count "$like_count" \
                                     --arg comment_count "$comment_count" \
                                     '{
                                         identifier: $identifier,
                                         title: $title,
                                         id: $identifier,
                                         description: $description,
                                         title: $title,
                                         published_at: $published_at,
                                         channel_id: $channel_id,
                                         channel_title: $channel_title,
                                         duration: $duration,
                                         view_count: $view_count,
                                         like_count: $like_count,
                                         comment_count: $comment_count
                                         
                                     }')
                  

                                     
      

                  # Add data to output
                  

                  video=$(echo "$video" | sed ':a;N;$!ba;s/\n/\\n/g' | sed 's/"/\\"/g')
                   echo "$video"
                  # echo "$title"
                  echo "video=$video" >> $GITHUB_OUTPUT

                  # Escape newlines and special characters
                  # data=$(echo "$data" | sed ':a;N;$!ba;s/\n/\\n/g' | sed 's/"/\\"/g')
          
                  # echo "data=$data" >> $GITHUB_OUTPUT
                  # echo "$data"
                  
                
              done

              nextPageToken=$(echo "$response" | jq -r '.nextPageToken')
              [ "$nextPageToken" == "null" ] && break
          done
          
         

      # - name: Debug the Output Values
      #   run: |
      #     name=$(echo '${{ steps.fetch_videos.outputs.video }}' | jq -r '.title')
          #echo "The name is $name"
          #echo "Video ID: ${{ steps.fetch_videos.outputs.video }} | jq -r '.identifier' }}"
          #echo "Title: ${{ steps.fetch_videos.outputs.video }} | jq -r '.title' }}"
          #echo "Description: ${{ steps.fetch_videos.outputs.video }} | jq -r '.description' }}"
          #echo "Published at: ${{ steps.fetch_videos.outputs.video }} | jq -r '.published_at' }}"
          
      - name: UPSERT playlist
        uses: port-labs/port-github-action@v1
        with:
          blueprint: ${{ fromJson(inputs.port_context).blueprint }}
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: BULK_UPSERT
          runId: ${{ fromJson(inputs.port_context).run_id }}
          entities: ${{ steps.fetch_videos.outputs.video }}
